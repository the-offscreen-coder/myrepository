1.Find the minimum and maximum element in an array?
Ans:
public class Qn1 
{ 
    static int getMin(int a[], int n)
    {
        int result = a[0];
        for (int i = 1; i < n; i++)
        result = Math.min(result, a[i]);
        return result;
    } 
    static int getMax(int a[], int n)
    {
        int result = a[0];
        for (int i = 1; i < n; i++)
        result = Math.max(result, a[i]);
        return result;
    }
    public static void main (String[] args)
    {
        int a[] = { 2,24,3,7,5 };
        int n = a.length;
        System.out.println( "Minimum element"+ " of array: " + getMin(a, n));
        System.out.println( "Maximum element" + " of array: " + getMax(a, n));
    }
}
2.Write a program to reverse the array?
Ans:
public class Qn2 
{

      public static void main(String[] args) 
	    {
		int a[]={7,4,9,6,3,2};
		System.out.println("Original array is:");
		for(int i=0;i<a.length;i++)
		{
			System.out.println(a[i]+"\t");
		}
		System.out.println("\n");
		System.out.println("Reverse array is:");
		for(int i=a.length-1;i>=0;i--)
		{
			System.out.println(a[i]+"\t");

	    }
	}

}
3.Write a program to sort the given array?
Ans:
public class Qn3 
{
     public static void main(String[] args)   
     {  
      //creating an instance of an array  
     int[] a= new int[] {92,5,-64,87,-53,2,75,0};  
     System.out.println("Array elements after sorting:");  
     //sorting logic  
     for (int i = 0; i < a.length; i++)   
     {  
       for (int j = i + 1; j < a.length; j++)   
        {  
            int tmp = 0;  
            if (a[i] > a[j])   
            {  
               tmp = a[i];  
               a[i] = a[j];  
               a[j] = tmp;  
            }  
        }  
      //prints the sorted element of the array  
           System.out.println(a[i]);  
}  
}  
} 
4.Find the occurance of an integer in the array[5,8,5,7,4,5]?
Ans:
public class Qn4 
{
	static int countOccurrences(int arr[], int n, int x)
    {
        int res = 0;
        for (int i=0; i<n; i++)
            if (x == arr[i])
              res++;
        return res;
    }
     
    public static void main(String args[])
    {
        int arr[] = {5,8,5,7,4,5 };
        int n = arr.length;
        int x = 5;
        System.out.println(countOccurrences(arr, n, x));
    }
}
5.Move all negative elements to one side of the array?[-1,6,8,7,-4,-3][7,8,6,-4,-3,-1]
Ans:
public class Qn5 
{
	 static void segregateElements(int arr[], int n)
{
    // Create an empty array to store result
    int temp[]=new int[n];
 
    // Traversal array and store +ve element in
    // temp array
    int j = 0; // index of temp
    for (int i = 0; i < n ; i++)
        if (arr[i] >= 0 )
            temp[j++] = arr[i];
 
    // If array contains all positive or all negative.
    if (j == n || j == 0)
        return;
 
    // Store -ve element in temp array
    for (int i = 0 ; i < n ; i++)
        if (arr[i] < 0)
            temp[j++] = arr[i];
 
    for(int i=0;i<n;i++)
		arr[i]=temp[i];
}
 
// Driver program
public static void  main(String[] args)
{
    int arr[]= {-1,6,8,7,-4,-3};
    int n = arr.length;
 
    segregateElements(arr, n);
 
    for (int i = 0; i < n; i++)
    System.out.println(arr[i]+"");
}
}
6.Find duplication in an array?
Ans:
public class Qn6 
{
public static void main(String[] args) {      
          
        //Initialize array   
        int [] arr = new int [] {1, 2, 3, 4, 2, 7, 8, 8, 3};   
          
        System.out.println("Duplicate elements in given array: ");  
        //Searches for duplicate element  
        for(int i = 0; i < arr.length; i++) {  
            for(int j = i + 1; j < arr.length; j++) {  
                if(arr[i] == arr[j])  
                    System.out.println(arr[j]);  
            }  
        }  
    }  
}  
7.Find the factorial of a large number?
Ans:
public class Qn7 
{
   public static void main(String arg[])	
	{
	    int i,fact=1,max=0,min=0;
		int arr[]=new int[]{1,2,3,4,5};
		System.out.println("Array elements are:");

		// Logic
	    for(i=0;i<arr.length;i++)
	    {
			 System.out.println(arr[i]+"\n");
		}
		 System.out.println("\n");

		  for(i=0;i<arr.length;i++)
		{

		    if(arr[i]>max)
			{
			  max=arr[i];
			}
			else if(arr[i]<min)
			{
				min=arr[i];
			}
		}
	    System.out.println("largest number in the array is:"+max);
           	
	   // System.out.println(arr[i]+"\n");
	     int num=max;
	    for(i=1;i<=num;i++)
	    { 
		fact=fact*i;
		 
	    }
		System.out.println("factorial is:"+fact);
        }
		}
8.How to find common elements in three sorted array?
Ans:
public class Qn8 
{
	    // This function prints common elements in ar1
    void findCommon(int arr1[], int arr2[], int arr3[])
    {
        // Initialize starting indexes for ar1[], ar2[] and ar3[]
        int i = 0, j = 0, k = 0;
 
        // Iterate through three arrays while all arrays have elements
        while (i < arr1.length && j < arr2.length && k < arr3.length)
        {
             // If x = y and y = z, print any of them and move ahead
             // in all arrays
             if (arr1[i] == arr2[j] && arr2[j] == arr3[k])
             {   System.out.print(arr1[i]+" "); 
			        i++; 
			        j++;
			        k++; 
			  }
 
             // x < y
             else if (arr1[i] < arr2[j])
                 i++;
 
             // y < z
             else if (arr2[j] < arr3[k])
                 j++;
 
             // We reach here when x > y and z < y, i.e., z is smallest
             else
                 k++;
        }
    }
 
    // Driver code to test above
    public static void main(String args[])
    {
        Qn8 ob = new Qn8();
 
        int arr1[] = {1, 5, 10, 20, 40, 80};
        int arr2[] = {6, 7, 20, 80, 100};
        int arr3[] = {3, 4, 15, 20, 30, 70, 80, 120};
 
        System.out.print("Common elements are\n ");
        ob.findCommon(arr1, arr2, arr3);
    }
}
9.How to rearrange array in alternating positive and negative number?
Ans:
public class Qn9 
{
	static void rearrange(int arr[],int n)
	{
		int i=-1,temp=0;
		for(int j=0;j<n;j++)
		{
			if(arr[j]<0)
			{
				i++;
				temp=arr[i];
				arr[i]=arr[j];
				arr[j]=temp;
			}
		}
		int pos=i+1,neg=0;
		while(pos<n && neg<pos && arr[neg]<0)
		{
			temp=arr[neg];
			arr[neg]=arr[pos];
			arr[pos]=temp;
			pos++;
			neg+=2;
		}
	}
	static void printArray(int arr[],int n)
	{
		for(int i=0;i<n;i++)
		{
			System.out.println(""+arr[i]);
		}
	}
	public static void main(String[] args)
	{
		int arr[]={2,3,4,-1,-2,-3,-4};
		int n=arr.length;
		rearrange(arr,n);
		printArray(arr,n);
	}
}
10.Write a program to find the sum and product of all elements of an array?
Ans: 
public class Qn10
{
         public static void main(String args[]) 
         {
         int a[]=new int[]{2,4,6,8,1};
			int sum = 0, prod = 1;
         System.out.println("Enter the array elements: ");
         for (int i = 0; i <a.length; i++)
         {
             System.out.println(a[i] + "\t");
             System.out.println("");
         }
         for (int i = 0; i < a.length; i++)
         {
             sum = sum + a[i];
             prod = prod * a[i];
         }
         System.out.println("Sum of array elements is: "+sum);
         System.out.println("Product of array elements is: "+prod);
     }
 }

		